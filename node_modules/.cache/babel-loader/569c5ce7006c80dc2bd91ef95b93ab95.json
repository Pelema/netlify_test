{"ast":null,"code":"var _jsxFileName = \"/home/hexx/Downloads/cbigold-develop/client/src/components/modal.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Button, Row, Col, Input, Label, FormGroup } from 'reactstrap';\nimport { placeBid } from '../web3Client';\nimport Modal from 'react-modal';\nimport { useForm } from 'react-hook-form';\nconst customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)'\n  }\n};\n\nfunction CustomModal(props) {\n  const {\n    modalIsOpen,\n    setIsOpen\n  } = props;\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  let subtitle;\n\n  const onSubmit = formData => {\n    placeBid(formData.itemId, formData.amount).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err);\n    });\n    console.log(formData, \" form data\");\n  };\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modalIsOpen,\n    onAfterOpen: afterOpenModal,\n    onRequestClose: closeModal,\n    style: customStyles,\n    contentLabel: \"Example Modal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    ref: _subtitle => subtitle = _subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, \"Hello\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(onSubmit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 33\n    }\n  }, \"Currency\"), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"form-control\"\n  }, register(\"currency\"), {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 33\n    }\n  }))))), /*#__PURE__*/React.createElement(\"select\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 25\n    }\n  }, \"USD\"), /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 25\n    }\n  }, \"ETH\")), /*#__PURE__*/React.createElement(\"input\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    onClick: closeModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Place Bid\")));\n}\n\nexport default CustomModal;","map":{"version":3,"sources":["/home/hexx/Downloads/cbigold-develop/client/src/components/modal.js"],"names":["React","useState","useEffect","Button","Row","Col","Input","Label","FormGroup","placeBid","Modal","useForm","customStyles","content","top","left","right","bottom","marginRight","transform","CustomModal","props","modalIsOpen","setIsOpen","register","handleSubmit","formState","errors","subtitle","onSubmit","formData","itemId","amount","then","res","console","log","catch","err","afterOpenModal","style","color","closeModal","_subtitle"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Button, Row, Col, Input, Label, FormGroup } from 'reactstrap';\nimport { placeBid } from '../web3Client'\nimport Modal from 'react-modal';\nimport { useForm } from 'react-hook-form'\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nfunction CustomModal(props) {\n    const { modalIsOpen, setIsOpen } = props\n    const { register, handleSubmit, formState: { errors } } = useForm();\n\n    let subtitle;\n\n\n    const onSubmit = (formData) => {\n        placeBid(formData.itemId, formData.amount)\n            .then(res => {\n                console.log(res)\n            })\n            .catch(err => {\n                console.log(err)\n            })\n        console.log(formData, \" form data\")\n    }\n\n    function afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        subtitle.style.color = '#f00';\n    }\n\n    function closeModal() {\n        setIsOpen(false);\n    }\n\n    useEffect(() => { }, [])\n    return (\n        <div>\n            <Modal\n                isOpen={modalIsOpen}\n                onAfterOpen={afterOpenModal}\n                onRequestClose={closeModal}\n                style={customStyles}\n                contentLabel=\"Example Modal\"\n            >\n                <h2 ref={(_subtitle) => (subtitle = _subtitle)}>Hello</h2>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <Row>\n                        <FormGroup>\n                            <Col>\n                                <Label>Currency</Label>\n                                <input className='form-control' {...register(\"currency\")}></input>\n                            </Col>\n\n                        </FormGroup>\n                    </Row>\n                    <select>\n                        <option>USD</option>\n                        <option>ETH</option>\n                    </select>\n                    <input />\n                </form>\n                <Button onClick={closeModal}>Place Bid</Button>\n            </Modal>\n        </div>\n    );\n}\n\nexport default CustomModal;\n"]},"metadata":{},"sourceType":"module"}